use pubs
go


select state from authors
intersect
select state from stores

select distinct(state) from stores

--Find authors info who stay in the same state as that of stores  are located
select * from authors
where state in (select state from stores)

use Northwind
go
select productid,productname,categoryid from products

select * from Employees

select * from employees
where HireDate like '1993-10-17'

select * from employees 
where convert(datetime2,hiredate) =  '1993-10-17 00:00:00.0000000'
----find all employees who joined on the same date as Steven joined

select hiredate from employees
where FirstName='Steven'

select * from employees 
where convert(date,hiredate) =(select hiredate from employees
where FirstName='Steven')

select DATEPART(hour,getdate())
select DATEPART(month,getdate())
select DATEPART(MONTH,getdate())
select DATEPART(YEAR,getdate())
select DATEPART(DAY,getdate())
select DATEPART(WEEK,getdate())
select DATEPART(DAYOFYEAR,getdate())
select DATEPART(WEEKDAY,getdate())

select DATEADD(month,2,getdate())
select DATEADD(month,-2,getdate())

use northwind
go
select firstname,DATEDIFF(month,hiredate,getdate()) from Employees
select firstname,hiredate,DATEDIFF(YEAR,hiredate,getdate()) from Employees

select DATENAME(DAY,getdate()),DATENAME(MONTH,getdate()),DATENAME(YEAR,getdate())


select supp.supplierid,supp.CompanyName from
 (select supplierid,companyname from suppliers) as supp
 order by supp.SupplierID

use pubs
go

select a.au_ord, a.title_id,t.title_id,t.title  from
(select title_id,title,type,pub_id from titles) as t
 join titleauthor as a
on t.title_id=a.title_id

select myT.title_id from (select a.title_id, type,pub_id
						 from titles as t1  join titleauthor  as a )
						 							as myT inner join titleauthor 
on myT.title_id=titleauthor.title_id
select * from titles

select title_id,title,type,price,averageprice.pub_id, averageprice.p, price-averageprice.p "totalPrice" from
(select pub_id,AVG(price) p from titles
group by pub_id) as averageprice inner join titles 
on type='business' and titles.pub_id in(1389,0736)

select title_id,title,type,price,(select AVG(price) p from titles) as averageprice,
price-(select AVG(price) p from titles) as diff from titles 
where type='business'





select * from titles


select pub_id from titles
where type='business'


select min(price) from titles

select * from titles
where price > any(select price from titles)  ---min
order by price

select max(price) from titles

select * from titles
where price > any(select max(price) from titles)  ---min
order by price


use northwind
go

select sum(quantity) from [order details]
where productid=77

select * from products

select * from products 
where  ProductID= any (select productid from [Order Details] where Quantity>=10)
order by ProductID


select * from products 
where  ProductID< all (select productid from [Order Details] where Quantity=10)
order by ProductID

select avg(unitprice) from products
group by CategoryID

select ProductID,UnitPrice from products
where unitprice > all (select avg(unitprice) from products
group by CategoryID)
order by UnitPrice

select count(*) from Products
where categoryid=1


select * from products
where categoryid=2 and not exists(select count(*) from Products
where categoryid=1
having count(*)>13)

--Ctrl+K +C ---- Comment
--Ctrl+K +U ---- UnComment


--Co-related sub query


--select------- from
--where ----- (select  outer.column



--if inner value is used in outer query--- sub query
--but if  outerquery value is used in inner query----- co-related sub query

--select inner.column 
--where (inner)


use pubs
go



select a.au_fname,a.au_lname from authors a
where 100 in(select t.royaltyper from titleauthor t
	 where t.au_id=a.au_id)

----if the outer query returns 20 rows -- 
--the sub query will execute once for each row returned by the outer query.


select * from authors

172-32-1176---authors

	 select * from titleauthor
	 where royaltyper=100


	 create view v1
	 as 
	 (query)

select * from v1







